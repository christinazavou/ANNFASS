Fresh Ubuntu on PC ‘graphics_lab’

1. 	install google chrome
2. 	sudo apt install git
	git config --global user.name "christinazavou"
	git config --global user.email "czavou01@gmail.com"
	(you can check nano ~/.gitconfig)

3. sudo apt install snapd

Snaps are basically an application compiled together with its dependencies and libraries – providing a sandboxed environment for the application to run. These are easier and faster to install, can receive latest updates and is confined from the OS and other apps. In other words, instead of worrying about DEB packages for Debian/Ubuntu, RPM packages for Fedora etc, you can use Snap package that would work on all Linux distributions with Snap support.

Anyone can publish a snap in the store, however, you only see the snaps that are published to the stable release and has been reviewed. Use the below command to search for a snap:

sudo snap find libreoffice

install a snap using:
sudo snap install <snap_name>
update a snap using:
sudo snap refresh <snap_name>

uninstall a snap using:
sudo snap remove <snap_name>

list installed snaps using:
snap list
4. install pycharm-community using:
sudo snap install pycharm-community --classic

5. 	download cuda runfile and install it in specific location
	sudo sh cuda_10.1.105_418.39_linux.run --silent --toolkit --toolkitpath=/usr/local/cuda-10.1

	note: with nvidia-smi you don't see the CUDA version installed, but the maximum CUDA version that your driver supports.

6. 	download and install anaconda from 	https://www.anaconda.com/distribution/ and run 
	bash anaconda….sh
 	run source ~/.bashrc
 	check with conda –version

7. install sublime with snap

8. add in ~/.bashrc the option to switch cuda:
	function _switch_cuda {
	   v=$1
	   export PATH=$PATH:/usr/local/cuda-$v/bin
	   export CUDADIR=/usr/local/cuda-$v
	   export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-$v/lib64
	   nvcc --version
	}

9. download cudnn
	make file cudnn_install.sh with:

	read -p "CUDA-version: " ver
	cp cuda/include/cudnn.h /usr/local/cuda-"${ver}"/include
	cp cuda/lib64/libcudnn* /usr/local/cuda-"${ver}"/lib64
	chmod a+r /usr/local/cuda*/include/cudnn.h /usr/local/cuda*/lib64/libcudnn*

	download linux cudnn .tgz file and extract with
	tar -zxvf cudnn-10.1-linux-x64-v7.6.5.32.tgz

	then run sudo sh cudnn_install.sh and give it version 10.1
	then delete cuda folder


10. create conda environment with cuda using: https://github.com/christinazavou/ANNFASS/tree/master/software and running:
	make init-OCNN

	then check if ok with 
	from tensorflow.python.client import device_lib
    local_device_protos = device_lib.list_local_devices()
    local_device_protos

11. sudo snap install cmake --classi

notes while trying out staff:
	export PATH=/home/graphicslab/anaconda3/bin:$PATH
	conda --version

	sudo apt update
	sudo apt install software-properties-common
	sudo add-apt-repository ppa:deadsnakes/ppa
	sudo apt install python3.7
	python3.7 --version

	python3 --version

	echo $PATH | sed "s|/home/graphicslab/anaconda3/envs/OCNN2/bin:|/home/graphicslab/anaconda3/bin:|g"
